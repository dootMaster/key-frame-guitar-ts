{"version":3,"sources":["components/form/helpers/notes.ts","components/form/Checkbox.tsx","components/form/InputForm.tsx","components/fretboard/Fret.tsx","components/fretboard/GtrString.tsx","components/fretboard/Fretboard.tsx","components/fretboard/helpers/createFretboard.tsx","components/fretboard/helpers/createString.tsx","components/fretboard/helpers/stringDict.ts","components/appHelpers/appHelpers.ts","components/form/StringQtySelect.tsx","components/form/helpers/defaultTunings.ts","components/TuningModal/TuningModal.tsx","App.tsx","index.tsx"],"names":["flats","sharps","both","Checkbox","i","note","handleChange","cssAppend","checked","type","id","className","onChange","Form","props","useState","accidental","setAccidental","useEffect","handleAccidental","position","updatedNotesState","form","map","item","index","setForm","htmlFor","Fret","display","onClick","toggleFret","j","flat","dictIndex","sharp","GtrString","gtrString","fret","key","Fretboard","fretboard","createFretboard","tuning","root","startNote","guitarString","length","push","createString","updateFretboardViaForm","currentForm","targetForm","forEach","StringQtySelect","standardTuning","changeStringAmount","event","newTuning","number","parseInt","returnsCommonTuningForStringQty","currentTarget","value","setTuning","newFretboard","setFretboard","name","e","defaultValue","TuningModal","handleClose","show","showHideClassName","App","Array","fill","setCurrent","setTarget","showTuningModal","setShowTuningModal","formHandler","copy","toggleTuningModal","string","updateFretboardViaToggle","resetArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64a8ee01.chunk.js","sourcesContent":["const flats = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\r\nconst sharps = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\r\nconst both = ['C', 'C#/Db', 'D', 'D#/Eb', 'E', 'F', 'F#/Gb', 'G', 'G#/Ab', 'A', 'A#/Bb', 'B'];\r\n\r\nexport { flats, sharps, both }","import { CheckboxProps } from \"./FormTypes/FormTypes\";\r\n\r\nconst Checkbox = ({i, note, handleChange, cssAppend, checked=false}:CheckboxProps) => (\r\n  <input\r\n    type='checkbox'\r\n    id={note + cssAppend}\r\n    className={'checkbox-' + cssAppend + ' checkbox'}\r\n    onChange={() => handleChange(i)}\r\n    checked={checked}\r\n  />\r\n);\r\n\r\nexport default Checkbox;","import { flats, sharps, both } from './helpers/notes'\r\nimport { useEffect, useState } from 'react';\r\nimport '../../CSS/InputForm.css';\r\nimport Checkbox from './Checkbox'\r\nimport { FormType } from './FormTypes/FormTypes';\r\n\r\nconst Form = (props:FormType) => {\r\n\r\n  const [accidental, setAccidental] = useState(flats);\r\n\r\n  useEffect(() => {\r\n    handleAccidental();\r\n  })\r\n\r\n  const handleAccidental = () => {\r\n    if(props.accidental === 'b') setAccidental(flats);\r\n    else if(props.accidental === '#') setAccidental(sharps);\r\n    else setAccidental(both);\r\n  }\r\n\r\n  const handleChange = (position:number) => {\r\n    const updatedNotesState = props.form.map((item, index) => index === position ? !item : item);\r\n    props.setForm(updatedNotesState);\r\n  }\r\n\r\n  return (\r\n    <form className={'input-form-' + props.cssAppend}>\r\n    {accidental.map((note, i) =>\r\n        (\r\n          <div key={i} className='checkbox-bg'>\r\n            <Checkbox\r\n              i={i}\r\n              note={note}\r\n              handleChange={handleChange}\r\n              cssAppend={props.cssAppend}\r\n              checked={props.form[i]}\r\n            />\r\n            <label htmlFor={note + props.cssAppend} className='checkbox-label'>{note}</label><br/>\r\n          </div>\r\n        )\r\n      )\r\n    }\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;","import { FretProps } from \"./FretboardTypes/FretboardTypes\"\r\n\r\nexport default function Fret(props: FretProps) {\r\n  return <td className={props.display + ` fret`} onClick={() => props.toggleFret(props.i, props.j)}>\r\n  {props.accidental === 'b' ? props.flat[props.dictIndex] : props.accidental === '#' ? props.sharp[props.dictIndex] : props.both[props.dictIndex]}\r\n  </td>\r\n}","import Fret from './Fret'\r\nimport { StringProps } from './FretboardTypes/FretboardTypes';\r\n\r\nconst GtrString = (props: StringProps) => (\r\n  <tr className='string'>\r\n  {props.gtrString.map((fret, j) =>\r\n    (\r\n      <Fret\r\n        {...props}\r\n        {...fret}\r\n        j={j}\r\n        key={j}\r\n      />\r\n    )\r\n  )}\r\n  </tr>\r\n)\r\nexport default GtrString;\r\n","import String from './GtrString'\r\nimport '../../CSS/Fretboard.css';\r\nimport { FretboardProps } from './FretboardTypes/FretboardTypes';\r\n\r\nconst Fretboard = (props: FretboardProps) => (\r\n  <table className='fretboard'>\r\n    <tbody>\r\n      {props.fretboard.map((gtrString, i) =>\r\n        (\r\n          <String\r\n            gtrString={gtrString}\r\n            i={i}\r\n            toggleFret={props.toggleFret}\r\n            accidental={props.accidental}\r\n            flat={props.flat}\r\n            sharp={props.sharp}\r\n            both={props.both}\r\n            key={i}\r\n          />\r\n        )\r\n      )}\r\n    </tbody>\r\n    <tfoot>\r\n      <tr className='fret-dots'>\r\n        {[0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0].map((fret, i) => {\r\n          if(fret) return <td>{'•'}</td>\r\n          if(i === 12) return <td>{'••'}</td>\r\n          else return <td></td>\r\n        })}\r\n      </tr>\r\n    </tfoot>\r\n  </table>\r\n)\r\n\r\nexport default Fretboard;","import createString from './createString'\r\n\r\nexport default function createFretboard(tuning: number[]) {\r\n  return tuning.map(root => createString(root));\r\n}\r\n\r\n\r\n\r\n","export default function createString(startNote: number) {\r\n  let guitarString = [];\r\n  let i = startNote;\r\n\r\n  while(guitarString.length < 13) {\r\n    if(i < 12) guitarString.push({display: 'neutral', dictIndex: i});\r\n    if(i >= 12) {\r\n      i = 0;\r\n      guitarString.push({display: 'neutral', dictIndex: i});\r\n    }\r\n    i += 1;\r\n  }\r\n  return guitarString;\r\n}","type dict = {[key: number]: string};\r\n\r\nexport const sharp:dict = {\r\n  0: 'C',\r\n  1: 'C#',\r\n  2: 'D',\r\n  3: 'D#',\r\n  4: 'E',\r\n  5: 'F',\r\n  6: 'F#',\r\n  7: 'G',\r\n  8: 'G#',\r\n  9: 'A',\r\n  10: 'A#',\r\n  11: 'B',\r\n}\r\n\r\nexport const flat:dict = {\r\n  0: 'C',\r\n  1: 'Db',\r\n  2: 'D',\r\n  3: 'Eb',\r\n  4: 'E',\r\n  5: 'F',\r\n  6: 'Gb',\r\n  7: 'G',\r\n  8: 'Ab',\r\n  9: 'A',\r\n  10: 'Bb',\r\n  11: 'B',\r\n}\r\n\r\nexport const both:dict = {\r\n  0: 'C',\r\n  1: 'C#/Db',\r\n  2: 'D',\r\n  3: 'D#/Eb',\r\n  4: 'E',\r\n  5: 'F',\r\n  6: 'F#/Gb',\r\n  7: 'G',\r\n  8: 'G#/Ab',\r\n  9: 'A',\r\n  10: 'A#/Bb',\r\n  11: 'B',\r\n}\r\n\r\n//[4, 11, 7, 2, 9, 4]\r\n","type GtrString = {\r\n  display: string\r\n  dictIndex: number\r\n}\r\n\r\nconst updateFretboardViaForm = (fretboard:Array<GtrString[]>, currentForm:boolean[], targetForm:boolean[]) => {\r\n  fretboard.forEach((gtrString, i) => {\r\n    gtrString.forEach((fret, j) => {\r\n      let note = fret.dictIndex;\r\n      if(currentForm[note] && targetForm[note]) fret.display = 'common';\r\n      else if(currentForm[note] && !targetForm[note]) fret.display = 'current';\r\n      else if(!currentForm[note] && targetForm[note]) fret.display = 'target';\r\n      else fret.display = 'neutral';\r\n    })\r\n  })\r\n}\r\n\r\nconst updateFretboardViaToggle = (fretboard:Array<GtrString[]>, string:number, fret:number) => {\r\n  switch(fretboard[string][fret].display) {\r\n    case 'neutral':\r\n      fretboard[string][fret].display = 'current';\r\n      break;\r\n    case 'current':\r\n      fretboard[string][fret].display = 'target';\r\n      break;\r\n    case 'target':\r\n      fretboard[string][fret].display = 'common';\r\n      break;\r\n    case 'common':\r\n      fretboard[string][fret].display = 'neutral';\r\n      break;\r\n  }\r\n}\r\n\r\nexport { updateFretboardViaForm, updateFretboardViaToggle };","import { returnsCommonTuningForStringQty } from './helpers/defaultTunings';\r\nimport { updateFretboardViaForm } from '../appHelpers/appHelpers';\r\nimport createFretboard from '../fretboard/helpers/createFretboard';\r\nimport '../../CSS/StringQtySelect.css';\r\nimport { StringQtyTypes } from './FormTypes/FormTypes';\r\n\r\n\r\nconst StringQtySelect = (props:StringQtyTypes) => {\r\n\r\n  let standardTuning = [4, 11, 7, 2, 9, 4]\r\n\r\n  const changeStringAmount = (event:React.ChangeEvent<HTMLSelectElement>) => {\r\n    let newTuning = returnsCommonTuningForStringQty(event.currentTarget.value) || standardTuning;\r\n    props.setTuning(newTuning);\r\n    let newFretboard = createFretboard(newTuning);\r\n    updateFretboardViaForm(newFretboard, props.currentForm, props.targetForm)\r\n    props.setFretboard(newFretboard);\r\n  }\r\n\r\n  return (\r\n  <div className='string-qty-container'>\r\n    <label htmlFor=\"String Amount\" className='string-qty-label'>{'#'}</label>\r\n    <select name=\"String Amount\" className='string-qty-select' onChange={(e) => changeStringAmount(e)} defaultValue={6}>\r\n      <option value={4}>{4}</option>\r\n      <option value={5}>{5}</option>\r\n      <option value={6}>{6}</option>\r\n      <option value={7}>{7}</option>\r\n      <option value={8}>{8}</option>\r\n      <option value={9}>{9}</option>\r\n    </select>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default StringQtySelect;","const returnsCommonTuningForStringQty = (number:string) => {\r\n  switch(parseInt(number)) {\r\n    case 4:\r\n      return [7, 2, 9, 4];\r\n    case 5:\r\n      return [7, 2, 9, 4, 11];\r\n    case 6:\r\n      return [4, 11, 7, 2, 9, 4];\r\n    case 7:\r\n      return [4, 11, 7, 2, 9, 4, 11];\r\n    case 8:\r\n      return [4, 11, 7, 2, 9, 4, 11, 6];\r\n    case 9:\r\n      return [4, 11, 7, 2, 9, 4, 11, 6, 1];\r\n  }\r\n}\r\n\r\nexport { returnsCommonTuningForStringQty }","import '../../CSS/TuningModal.css';\r\nimport TuningModalProps from './TuningModalTypes/TuningModalTypes';\r\n\r\nconst TuningModal = ({ handleClose, show, tuning }:TuningModalProps) => {\r\n  const showHideClassName = show ? \"tuning-modal display-block\" : \"tuning-modal display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className=\"tuning-modal-main\">\r\n        {tuning}\r\n        <button onClick={() => handleClose()}>\r\n          {'X'}\r\n        </button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TuningModal;","import './CSS/App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport InputForm from './components/form/InputForm'\r\nimport Fretboard from './components/fretboard/Fretboard';\r\nimport createFretboard from './components/fretboard/helpers/createFretboard';\r\nimport { flat, sharp, both } from './components/fretboard/helpers/stringDict';\r\nimport { updateFretboardViaToggle, updateFretboardViaForm } from './components/appHelpers/appHelpers';\r\nimport { GtrString } from './components/AppTypes';\r\nimport StringQtySelect from './components/form/StringQtySelect';\r\nimport TuningModal from './components/TuningModal/TuningModal';\r\n\r\nfunction App() {\r\n  const [tuning, setTuning] = useState<number[]>([4, 11, 7, 2, 9, 4]);\r\n  const [fretboard, setFretboard] = useState<GtrString[][]>(createFretboard([4, 11, 7, 2, 9, 4]));\r\n  const [accidental, setAccidental] = useState<string>('b');\r\n  const [currentForm, setCurrent] = useState<boolean[]>(new Array(12).fill(false));\r\n  const [targetForm, setTarget] = useState<boolean[]>(new Array(12).fill(false));\r\n  const [showTuningModal, setShowTuningModal] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    formHandler();\r\n  }, [currentForm, targetForm])\r\n\r\n  const toggleFret = (string:number, fret:number) => {\r\n    let copy = [...fretboard];\r\n    updateFretboardViaToggle(copy, string, fret);\r\n    setFretboard(copy);\r\n  }\r\n\r\n  const formHandler = () => {\r\n    let copy = [...fretboard];\r\n    updateFretboardViaForm(copy, currentForm, targetForm);\r\n    setFretboard(copy);\r\n  }\r\n\r\n  const switchAccidental = () => {\r\n    switch(accidental) {\r\n      case 'b':\r\n        setAccidental('#');\r\n        break;\r\n      case '#':\r\n        setAccidental('*');\r\n        break;\r\n      case '*':\r\n        setAccidental('b');\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    let resetArray = new Array(12).fill(false);\r\n    setCurrent(resetArray);\r\n    setTarget(resetArray);\r\n    setFretboard(createFretboard(tuning));\r\n  }\r\n\r\n  const toggleTuningModal = () => {\r\n    setShowTuningModal(!showTuningModal);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Key Frame Guitar</h1>\r\n      <h5>I built this app to help students of the guitar focus on navigating a specific chord change. I hope that you find it useful. - Leslie</h5>\r\n      <Fretboard\r\n        fretboard={fretboard}\r\n        accidental={accidental}\r\n        flat={flat}\r\n        sharp={sharp}\r\n        both={both}\r\n        toggleFret={toggleFret}\r\n      />\r\n      <div className='forms-container'>\r\n        <InputForm\r\n          accidental={accidental}\r\n          form={currentForm}\r\n          setForm={setCurrent}\r\n          cssAppend={'current'}\r\n        />\r\n        <InputForm\r\n          accidental={accidental}\r\n          form={targetForm}\r\n          setForm={setTarget}\r\n          cssAppend={'target'}\r\n        />\r\n        <div className='tools-container'>\r\n          <StringQtySelect\r\n            accidental={accidental}\r\n            setFretboard={setFretboard}\r\n            fretboard={fretboard}\r\n            currentForm={currentForm}\r\n            targetForm={targetForm}\r\n            setTuning={setTuning}\r\n          />\r\n          <br/>\r\n          <button className='acc-button button' onClick={switchAccidental}>{'♭ ♯ ✶'}</button>\r\n          <br/>\r\n          <button className='show-tuning-button' onClick={toggleTuningModal}>{'⑂'}</button>\r\n          <br/>\r\n          <button onClick={reset} className='reset-button button'>RESET</button>\r\n        </div>\r\n      </div>\r\n      <TuningModal\r\n        handleClose={toggleTuningModal}\r\n        show={showTuningModal}\r\n        tuning={tuning}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}